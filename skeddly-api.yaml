swagger: '2.0'

# This is your document metadata
info:
  version: "0.0.2"
  title: Skeddly API
  contact:
    name: Skeddly Support
    url: https://app.skeddly.com/Support
    email: support@skeddly.com

# the domain of the service
host: api.skeddly.com

# array of all schemes that your API supports
schemes:
  - https

# will be prefixed to all paths
basePath: /api

produces:
  - application/json
  
consumes:
  - application/json

security:
  - accessKeyAuth: []
  
securityDefinitions:
  accessKeyAuth:
    type: apiKey
    in: header
    name: Authorization
    
paths:

  # Actions
  /Actions:
    get:
      description: |
        Retrieves the list of actions.
      
      tags:
        - actions
      
      security:
        - accessKeyAuth: []
        
        # This is array of GET operation parameters:
      parameters:
        - name: include
          in: query
          description: List of extra data to include in the results 
          required: false
          type: string
          format: comma-seperated list
        - name: filter.actionTypes
          in: query
          description: List of action types. 
          required: false
          type: string
          format: comma-seperated list
        - name: filter.credentialIds
          in: query
          description: List of credential IDs.
          required: false
          type: string
          format: comma-seperated list
        - name: filter.isEnabled
          in: query
          description: True or False.
          required: false
          type: boolean

      # Expected responses for this operation:
      responses:
        # Response code
        200:
          description: Successful response
          # A schema describing your response object.
          # Use JSON Schema format
          schema:
            title: ListActionsResponse
            type: array
            items:
              $ref: '#/definitions/Action'
  
  # Managed Instance Groups
  /ManagedInstanceGroups:
    get:
      description: |
        Retrieves the list of Managed Instance Groups.
      
      tags:
        - managed-instances
      
      security:
        - accessKeyAuth: []
        
        # This is array of GET operation parameters:
      parameters:
        - name: include
          in: query
          description: List of extra data to include in the results 
          required: false
          type: string
          format: comma-seperated list

      # Expected responses for this operation:
      responses:
        # Response code
        200:
          description: Successful response
          schema:
            title: ListManagedInstanceGroupsResponse
            type: array
            items:
              $ref: '#/definitions/ManagedInstanceGroup'
    post:
      description: |
        Creates a new Managed Instance Group.
        
      tags:
        - managed-instances
      
      security:
        - accessKeyAuth: []
        
      parameters:
        - name: body
          in: body
          description: Managed Instance Group to be created.
          required: true
          schema:
            $ref: '#/definitions/CreateManagedInstanceGroup'
          
      responses:
        200:
          description: Successful response
          schema:
            $ref: '#/definitions/ManagedInstanceGroup'
            
  /ManagedInstanceGroups/{id}:       
    put:
      description: |
        Updates an existing Managed Instance Group.
        
      tags:
        - managed-instances
      
      security:
        - accessKeyAuth: []
        
      parameters:
        - name: id
          in: path
          description: ID of the existing Managed Instance Group to be updated.
          required: true
          type: string
        - name: body
          in: body
          description: Managed Instance Group to be created.
          required: true
          schema:
            $ref: '#/definitions/UpdateManagedInstanceGroup'
          
      responses:
        200:
          description: Successful response
          schema:
            $ref: '#/definitions/ManagedInstanceGroup'
              
definitions:

  # An Action
  Action:
    type: object
    required:
      - actionId
      - actionType
      - actionVersionId
      - credentialId
      - isEnabled
      - lastModifiedBy
      - lastModifiedDate
      - name
      - regionName
    properties:
      actionId:
        type: string
      actionType:
        type: string
      actionVersionId:
        type: string
      credentialId:
        type: string
      isEnabled:
        type: boolean
      lastModifiedBy:
        type: string
      lastModifiedDate:
        type: string
        format: date-time
      name:
        type: string
      regionName:
        type: string
  
  CreateManagedInstanceGroup:
    type: object
    required:
      - name
      - timeZoneId
    properties:
      backupParameters:
        $ref: '#/definitions/ManagedInstanceBackupParameters'
      deleteBackupsParameters:
        $ref: '#/definitions/ManagedInstanceDeleteBackupsParameters'
      name:
        type: string
        maxLength: 255
      startStopParameters:
        $ref: '#/definitions/ManagedInstanceStartStopParameters'
      timeZoneId:
        type: string
        
  DailyScheduleParameters:
    type: object
    description: Parameters for a 'daily' schedule.
    allOf:
      - $ref: '#/definitions/ScheduleParameters'
      -
        properties:
          days:
            type: array
            description: Days of the week on which to execute.
            items:
              type: string
              enum:
                - sunday
                - monday
                - tuesday
                - wednesday
                - thursday
                - friday
                - saturday
                
  HourlyScheduleParameters:
    type: object
    description: Parameters for a 'hourly' schedule.
    allOf:
      - $ref: '#/definitions/ScheduleParameters'
      -
        properties:
          hours:
            type: array
            description: Hours of the day at which to execute.
            items:
              type: integer
              format: int32
              minimum: 0
              maximum: 23
             
  ManagedInstanceBackupParameters:
    type: object
    required:
      - schedule
      - backupName
      - tags
    properties:
      schedule:
        $ref: '#/definitions/ManagedInstanceSchedule'
      backupName:
        type: string
        description: Name of the backup to be created.
        maxLength: 255
      tags:
        type: array
        description: Resource tags to add to the backups.
        items:
          $ref: '#/definitions/Tag'
  
  ManagedInstanceDeleteBackupsParameters:
    type: object
    required:
      - schedule
      - olderThanDays
      - minimumToKeep
      - isPerVolume
    properties:
      schedule:
        $ref: '#/definitions/ManagedInstanceSchedule'
      isPerVolume:
        type: boolean
      minimumToKeep:
        type: integer
        format: int32
        description: Minimum number of backups to preserve.
        minimum: 0
        maximum: 100
      olderThanDays:
        type: integer
        format: int32
        description: Minimum age for a backup to be deleted.
        minimum: 1
        maximum: 1000
          
  # A Managed Instance Group    
  ManagedInstanceGroup:
    type: object
    required:
      - createdDate
      - managedInstanceGroupId
      - lastModifiedBy
      - name
      - timeZoneId
    properties:
      backupParameters:
        $ref: '#/definitions/ManagedInstanceBackupParameters'
      createdDate:
        type: string
        format: date-time
      deleteBackupsParameters:
        $ref: '#/definitions/ManagedInstanceDeleteBackupsParameters'
      isBackupInstance:
        type: boolean
      isDeleteBackups:
        type: boolean
      isStartInstance:
        type: boolean
      managedInstanceGroupId:
        type: string
      lastModifiedBy:
        type: string
        format: date-time
      name:
        type: string
        maxLength: 255
      startStopParameters:
        $ref: '#/definitions/ManagedInstanceStartStopParameters'
      timeZoneId:
        type: string
  
  ManagedInstanceSchedule:
    type: object
    description: Schedule for a Managed Instance or a Managed Instance Group.
    required:
      - scheduleType
      - timeOfDay
      - parameters
    properties:
      parameters:
        $ref: '#/definitions/ScheduleParameters'
      scheduleType:
        type: string
        description: Type of schedule.
        enum:
          - hourly
          - daily
          - monthly
      timeOfDay:
        type: string
        description: Time of day to execute the schedule.
          Local to the time zone of the Managed Instance or Managed Instance Group. Format is 24-hour, 'hh:mm:ss'.
        pattern: '[0-2][0-9]:[0-5][0-9]:[0-5][0-9]'
  
  ManagedInstanceStartStopParameters:
    type: object
    required:
      - schedule
      - stopTimeInSeconds
    properties:
      schedule:
        $ref: '#/definitions/ManagedInstanceSchedule'
      stopTimeInSeconds:
        type: integer
        description: Length of time (in seconds) after the instance was
          started to stop the instance.
        format: int32
        minimum: 1
        maximum: 86400
  
  MonthlyScheduleParameters:
    type: object
    description: Parameters for a 'monthly' schedule.
    allOf:
      - $ref: '#/definitions/ScheduleParameters'
      -
        required:
          - dayOfMonth
        properties:
          dayOfMonth:
            type: string
            enum:
              - indicate-day-and-week
              - last-day
              - same-day-as-start
          months:
            type: array
            description: Months of the year in which to execute.
            items:
              type: string
              enum:
                - january
                - february
                - march
                - april
                - may
                - june
                - july
                - august
                - september
                - october
                - november
                - december
          weekAndDay:
            $ref: '#/definitions/WeekAndDay'
                
  NoneScheduleParameters:
    type: object
    allOf:
      - $ref: '#/definitions/ScheduleParameters'
      
  ScheduleParameters:
    type: object
    
  Tag:
    type: object
    description: A resource tag.
    required:
      - name
    properties:
      name:
        type: string
        maxLength: 255
      value:
        type: string
        maxLength: 255
        
  UpdateManagedInstanceGroup:
    type: object
    required:
      - name
      - managedInstanceGroupId
      - timeZoneId
    properties:
      backupParameters:
        $ref: '#/definitions/ManagedInstanceBackupParameters'
      deleteBackupsParameters:
        $ref: '#/definitions/ManagedInstanceDeleteBackupsParameters'
      name:
        type: string
        maxLength: 255
      startStopParameters:
        $ref: '#/definitions/ManagedInstanceStartStopParameters'
      timeZoneId:
        type: string
        
  WeekAndDay:
    type: object
    required:
      - day
      - week
    properties:
      week:
        type: string
        enum:
          - first
          - second
          - third
          - fourth
          - last
      day:
        type: string
        enum:
          - sunday
          - monday
          - tuesday
          - wednesday
          - thursday
          - friday
          - saturday 

  WeeklyScheduleParameters:
    type: object
    allOf:
      - $ref: '#/definitions/ScheduleParameters'
      -
        required:
          - dayOfWeek
        properties:
          dayOfWeek:
            type: string
            enum:
              - same-day-as-start
      
# End of file
